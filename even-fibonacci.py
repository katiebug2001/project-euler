import unittest

def even_fibonacci(up_to):
    """Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."""

    even_fibs = []
    last_fib = 0
    this_fib = 1

    while this_fib <= up_to:

        #print(this_fib)
        #print(even_fibs)

        if (this_fib % 2) == 0:
            #sum_even_fibs += this_fib
            even_fibs.append(this_fib)

        last_fib, this_fib = this_fib, (last_fib + this_fib)

    print(even_fibs)

    return sum(even_fibs)
print(even_fibonacci(4000000))

class test_even_fibonacci(unittest.TestCase):
    """
    tests even_fibonacci()
    """

    def test_different_up_to(self):
        """
        tests the sum of even fibonaccis when taken up to different numbers
        """
        test_up_to = [1, 2, 10, 50, 55, 700, 350000]
        test_even_fib = []
        for n in test_up_to:
            test_even_fib.append(even_fibonacci(n))
        self.assertEqual([0, 2, 10, 44, 44, 798, 257114], test_even_fib)


if __name__ == '__main__':
    unittest.main()